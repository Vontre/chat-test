This chat service is an EXTREMELY BASIC DEMO, and would not function well in a real environment.

It does not handle message ordering, disconnects, error handling, message redundancy, or rate limiting; it only works reliably in a localhost demo environment.


SCALABILITY

As long as concurrent users have a strict cap this should slot nicely into a horizontally scalable system in which another server authority assigns users to different chat servers.

Data transmission scales by n-squared, so want to test upper bound of users in chat room. If extremely large chat required (e.g. Twitch chat), might have to rate limit total incoming text.

Could potentially have multiple chat rooms per node process, but that is outside the scope of this exercise.

The 'popular' function might be a bit CPU heavy, should rate-limit and evaluate.